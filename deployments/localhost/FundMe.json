{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WithdrawCheaper",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmmoutFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3da7185c77ac11e3c09f8598a6a4f5551c79a05c074952ca9fe9360ff92b9b74",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1005944",
    "logsBloom": "0x
    "blockHash": "0x584ce528edae618278937e8794d896bcddb863b43d329c22b49334edb0a494dc",
    "transactionHash": "0x3da7185c77ac11e3c09f8598a6a4f5551c79a05c074952ca9fe9360ff92b9b74",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1005944",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "52f9c6ea528a4be8d926e8e909fc484b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawCheaper\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmmoutFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Forbes\",\"details\":\"Implements a pricefeed\",\"kind\":\"dev\",\"methods\":{\"Fund()\":{\"details\":\"uses getConversionRate function from other contract\"},\"Withdraw()\":{\"details\":\"resets the s_funders array\"}},\"title\":\"Crowdfunding contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"Fund()\":{\"notice\":\"Send ETH to the contract\"},\"Withdraw()\":{\"notice\":\"Withdraw funds from contract\"}},\"notice\":\"A demo for funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIt\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/** @title Crowdfunding contract\\n * @author Forbes\\n * @notice A demo for funding contract\\n * @dev Implements a pricefeed\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /** @notice Send ETH to the contract\\n     *  @dev uses getConversionRate function from other contract\\n     */\\n    function Fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    /** @notice Withdraw funds from contract\\n     *  @dev resets the s_funders array\\n     */\\n    function Withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function WithdrawCheaper() public payable onlyOwner {\\n        // saved the s_funders to the memory so i can loop it without having to\\n        // read from storage every time it loops\\n        address[] memory funders = s_funders;\\n\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        // (bool callSuccess, ) = payable(msg.sender).call{\\n        //     value: address(this).balance\\n        // }(\\\"\\\");\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess);\\n    }\\n\\n    //Getter functions to facilitate interaction with the contract\\n    // and making the variables private result in cheaper gas!\\n    // View / Pure functions\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmmoutFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    // What if someone send eth to the contract without the fund function?\\n    // receive() external payable {\\n    //     Fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     Fund();\\n    // }\\n}\\n\",\"keccak256\":\"0x727af3366c345fd2e8f2044754e5575cb6c0878cb30328c895569bfc3cd534ca\",\"license\":\"MIt\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIt\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  // Gets ETH value in usd\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    // These commas , ,,, means the unused arguments\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n    // Price = ETH in terms of usd\\n    // 300000000000  // Value is 3000, but comes with 8 decimals 3000.00000000\\n    // Need to match the decimals in eth(1e18) and the usd value\\n\\n    // Converting to uint256 and matching decimals\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x0d37defd8b2e960af22564f415769e0aa2955798f360e0248838482d85bd9298\",\"license\":\"MIt\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125b3803806200125b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110d562000186600039600081816101e4015281816105580152818161074e01526107e801526110d56000f3fe60806040526004361061007b5760003560e01c8063838229c11161004e578063838229c1146100fc578063893d20e8146101065780639e87a5cd14610131578063d7b4750c1461015c5761007b565b8063127a7c361461008057806357ea89b6146100bd5780636b69a592146100c75780636ce1417e146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a63565b610199565b6040516100b49190610aa9565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610aa9565b60405180910390f35b6100fa61042e565b005b610104610556565b005b34801561011257600080fd5b5061011b6107e4565b6040516101289190610ad3565b60405180910390f35b34801561013d57600080fd5b5061014661080c565b6040516101539190610b4d565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610b94565b610836565b6040516101909190610ad3565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c1f565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c68565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610959565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cc8565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d3a565b60405180910390fd5b50565b678ac7230489e8000081565b678ac7230489e8000061046c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087d90919063ffffffff16565b10156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610da6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105db576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561065e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610614575b5050505050905060005b81518110156106e957600082828151811061068657610685610bc1565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106e190610c1f565b915050610668565b50600067ffffffffffffffff81111561070557610704610c68565b5b6040519080825280602002602001820160405280156107335781602001602082028036833780820191505090505b5060009080519060200190610749929190610959565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161079090610cc8565b60006040518083038185875af1925050503d80600081146107cd576040519150601f19603f3d011682016040523d82523d6000602084013e6107d2565b606091505b50509050806107e057600080fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061084b5761084a610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610889836108b9565b90506000670de0b6b3a764000085836108a29190610dc6565b6108ac9190610e4f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190610f0d565b5050509150506402540be400816109519190610f88565b915050919050565b8280548282559060005260206000209081019282156109d2579160200282015b828111156109d15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610979565b5b5090506109df91906109e3565b5090565b5b808211156109fc5760008160009055506001016109e4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3082610a05565b9050919050565b610a4081610a25565b8114610a4b57600080fd5b50565b600081359050610a5d81610a37565b92915050565b600060208284031215610a7957610a78610a00565b5b6000610a8784828501610a4e565b91505092915050565b6000819050919050565b610aa381610a90565b82525050565b6000602082019050610abe6000830184610a9a565b92915050565b610acd81610a25565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b6000819050919050565b6000610b13610b0e610b0984610a05565b610aee565b610a05565b9050919050565b6000610b2582610af8565b9050919050565b6000610b3782610b1a565b9050919050565b610b4781610b2c565b82525050565b6000602082019050610b626000830184610b3e565b92915050565b610b7181610a90565b8114610b7c57600080fd5b50565b600081359050610b8e81610b68565b92915050565b600060208284031215610baa57610ba9610a00565b5b6000610bb884828501610b7f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5d57610c5c610bf0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb2600083610c97565b9150610cbd82610ca2565b600082019050919050565b6000610cd382610ca5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d24600b83610cdd565b9150610d2f82610cee565b602082019050919050565b60006020820190508181036000830152610d5381610d17565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610d90601283610cdd565b9150610d9b82610d5a565b602082019050919050565b60006020820190508181036000830152610dbf81610d83565b9050919050565b6000610dd182610a90565b9150610ddc83610a90565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1557610e14610bf0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5a82610a90565b9150610e6583610a90565b925082610e7557610e74610e20565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9f81610e80565b8114610eaa57600080fd5b50565b600081519050610ebc81610e96565b92915050565b6000819050919050565b610ed581610ec2565b8114610ee057600080fd5b50565b600081519050610ef281610ecc565b92915050565b600081519050610f0781610b68565b92915050565b600080600080600060a08688031215610f2957610f28610a00565b5b6000610f3788828901610ead565b9550506020610f4888828901610ee3565b9450506040610f5988828901610ef8565b9350506060610f6a88828901610ef8565b9250506080610f7b88828901610ead565b9150509295509295909350565b6000610f9382610ec2565b9150610f9e83610ec2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fdd57610fdc610bf0565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561101a57611019610bf0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561105757611056610bf0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109457611093610bf0565b5b82820290509291505056fea2646970667358221220205cebdee789c24fefd5c284ad5048e426792b64dbce892bad067dcda2622a1364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063838229c11161004e578063838229c1146100fc578063893d20e8146101065780639e87a5cd14610131578063d7b4750c1461015c5761007b565b8063127a7c361461008057806357ea89b6146100bd5780636b69a592146100c75780636ce1417e146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a63565b610199565b6040516100b49190610aa9565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610aa9565b60405180910390f35b6100fa61042e565b005b610104610556565b005b34801561011257600080fd5b5061011b6107e4565b6040516101289190610ad3565b60405180910390f35b34801561013d57600080fd5b5061014661080c565b6040516101539190610b4d565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190610b94565b610836565b6040516101909190610ad3565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c1f565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c68565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610959565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cc8565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d3a565b60405180910390fd5b50565b678ac7230489e8000081565b678ac7230489e8000061046c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087d90919063ffffffff16565b10156104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610da6565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105db576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561065e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610614575b5050505050905060005b81518110156106e957600082828151811061068657610685610bc1565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106e190610c1f565b915050610668565b50600067ffffffffffffffff81111561070557610704610c68565b5b6040519080825280602002602001820160405280156107335781602001602082028036833780820191505090505b5060009080519060200190610749929190610959565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161079090610cc8565b60006040518083038185875af1925050503d80600081146107cd576040519150601f19603f3d011682016040523d82523d6000602084013e6107d2565b606091505b50509050806107e057600080fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061084b5761084a610bc1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610889836108b9565b90506000670de0b6b3a764000085836108a29190610dc6565b6108ac9190610e4f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190610f0d565b5050509150506402540be400816109519190610f88565b915050919050565b8280548282559060005260206000209081019282156109d2579160200282015b828111156109d15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610979565b5b5090506109df91906109e3565b5090565b5b808211156109fc5760008160009055506001016109e4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3082610a05565b9050919050565b610a4081610a25565b8114610a4b57600080fd5b50565b600081359050610a5d81610a37565b92915050565b600060208284031215610a7957610a78610a00565b5b6000610a8784828501610a4e565b91505092915050565b6000819050919050565b610aa381610a90565b82525050565b6000602082019050610abe6000830184610a9a565b92915050565b610acd81610a25565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b6000819050919050565b6000610b13610b0e610b0984610a05565b610aee565b610a05565b9050919050565b6000610b2582610af8565b9050919050565b6000610b3782610b1a565b9050919050565b610b4781610b2c565b82525050565b6000602082019050610b626000830184610b3e565b92915050565b610b7181610a90565b8114610b7c57600080fd5b50565b600081359050610b8e81610b68565b92915050565b600060208284031215610baa57610ba9610a00565b5b6000610bb884828501610b7f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2a82610a90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c5d57610c5c610bf0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb2600083610c97565b9150610cbd82610ca2565b600082019050919050565b6000610cd382610ca5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d24600b83610cdd565b9150610d2f82610cee565b602082019050919050565b60006020820190508181036000830152610d5381610d17565b9050919050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610d90601283610cdd565b9150610d9b82610d5a565b602082019050919050565b60006020820190508181036000830152610dbf81610d83565b9050919050565b6000610dd182610a90565b9150610ddc83610a90565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1557610e14610bf0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5a82610a90565b9150610e6583610a90565b925082610e7557610e74610e20565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9f81610e80565b8114610eaa57600080fd5b50565b600081519050610ebc81610e96565b92915050565b6000819050919050565b610ed581610ec2565b8114610ee057600080fd5b50565b600081519050610ef281610ecc565b92915050565b600081519050610f0781610b68565b92915050565b600080600080600060a08688031215610f2957610f28610a00565b5b6000610f3788828901610ead565b9550506020610f4888828901610ee3565b9450506040610f5988828901610ef8565b9350506060610f6a88828901610ef8565b9250506080610f7b88828901610ead565b9150509295509295909350565b6000610f9382610ec2565b9150610f9e83610ec2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fdd57610fdc610bf0565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561101a57611019610bf0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561105757611056610bf0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561109457611093610bf0565b5b82820290509291505056fea2646970667358221220205cebdee789c24fefd5c284ad5048e426792b64dbce892bad067dcda2622a1364736f6c63430008080033",
  "devdoc": {
    "author": "Forbes",
    "details": "Implements a pricefeed",
    "kind": "dev",
    "methods": {
      "Fund()": {
        "details": "uses getConversionRate function from other contract"
      },
      "Withdraw()": {
        "details": "resets the s_funders array"
      }
    },
    "title": "Crowdfunding contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "Fund()": {
        "notice": "Send ETH to the contract"
      },
      "Withdraw()": {
        "notice": "Withdraw funds from contract"
      }
    },
    "notice": "A demo for funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}